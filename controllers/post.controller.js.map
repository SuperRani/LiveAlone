{"version":3,"file":"post.controller.js","sourceRoot":"","sources":["post.controller.ts"],"names":[],"mappings":";;;;;;;;;;AACA,KAAK;AACL,mDAA8C;AAM9C,0CAA0C;AAI1C,KAAK;AACL,kBAA+B,GAAY,EAAE,GAAa;;QACtD,MAAM,IAAI,GAAG,MAAM,kBAAO,EAAE,CAAC;QAC7B,IAAI;YAEA,iIAAiI;YACjI,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAEtD,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAE7B;QAAA,OAAO,CAAC,EAAE;YACP,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAClB;IACL,CAAC;CAAA;AAbD,4BAaC;AAED,KAAK;AACL,iBAA8B,GAAY,EAAE,GAAa;;QACrD,gCAAgC;QAChC,QAAQ;QACR,oCAAoC;QACpC,wEAAwE;QACxE,oFAAoF;QACpF,6BAA6B;QAC7B,8BAA8B;QAC9B,QAAQ;QACR,eAAe;QACf,sBAAsB;QACtB,IAAI;QACJ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC1B,CAAC;CAAA;AAbD,0BAaC;AAED,oGAAoG;AAEpG,kEAAkE;AAClE,oEAAoE;AAGpE,MAAM;AACN,oBAAiC,GAAY,EAAE,GAAa;;QACxD,gCAAgC;QAChC,QAAQ;QACR,wCAAwC;QACxC,EAAE;QACF,kEAAkE;QAClE,8DAA8D;QAC9D,EAAE;QACF,iBAAiB;QACjB,sCAAsC;QACtC,UAAU;QACV,EAAE;QACF,eAAe;QACf,sBAAsB;QACtB,IAAI;QAEJ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC1B,CAAC;CAAA;AAjBD,gCAiBC;AAID,QAAQ;AACR,oBAAiC,GAAY,EAAE,GAAa;;QACxD,gCAAgC;QAChC,QAAQ;QACR,oCAAoC;QACpC,EAAE;QACF,EAAE;QACF,oEAAoE;QACpE,iBAAiB;QACjB,kCAAkC;QAClC,UAAU;QACV,EAAE;QACF,eAAe;QACf,sBAAsB;QACtB,IAAI;QAEJ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC1B,CAAC;CAAA;AAhBD,gCAgBC;AAGD,QAAQ;AACR,oBAAiC,GAAY,EAAE,GAAa;;QACxD,gCAAgC;QAChC,QAAQ;QACR,oCAAoC;QACpC,2CAA2C;QAC3C,EAAE;QACF,kFAAkF;QAClF,iBAAiB;QACjB,kCAAkC;QAClC,UAAU;QACV,EAAE;QACF,eAAe;QACf,sBAAsB;QACtB,IAAI;QACJ,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC1B,CAAC;CAAA;AAfD,gCAeC","sourcesContent":["import { Request, Response } from 'express'\n// DB\nimport { connect } from '../database/database'\n\n// Interfaces\nimport { Board } from '../interface/Board'\nimport {Pool} from \"mysql2/promise\";\n\n// import pool from '../database/database'\n\n\n\n//get\nexport async function getPosts(req: Request, res: Response): Promise<Response | void> {\n    const conn = await connect();\n    try {\n        \n        // const sql =  `SELECT @RNUM := @RNUM + 1 AS NO, a.* FROM (SELECT * FROM board  ORDER BY bNum ASC ) a, ( SELECT @RNUM := 0 ) b`;\n        const Board = await conn.query('CALL usp_get_board;');\n        \n        return res.json(Board[0]);\n        \n    }catch (e) {\n        await conn.end();\n        console.log(e);\n    }\n}\n\n//get\nexport async function getPost(req: Request, res: Response) {\n    // const conn = await connect();\n    // try {\n    //     const bNum = req.params.bNum;\n    //     // const posts = await conn.query(`call usp_get_list_board(?);`);\n    //     const posts = await conn.query('SELECT * FROM board WHERE bNum = ?', [bNum]);\n    //     if(posts.length > 0 ){\n    //         res.json(posts[0]);\n    //     }\n    // }catch (e) {\n    //     console.log(e);\n    // }\n    console.log('update');\n}\n\n//       `SELECT A.*, @RNUM := @RNUM + 1 ROWNUM FROM board A, (SELECT @RNUM := 0) R ORDER BY A.bNum`\n\n//  1.   @rownum := @rownum+1 AS RNUM 은 행을 불러올때마다 1을 더해서 출력하겠다 이다.\n//  2.   SELECT @rownum :=0) AS R 는 @rownum을 0으로 초기화해 SELECT 하겠다 이다.\n\n\n//post\nexport async function createPost(req: Request, res: Response) {\n    // const conn = await connect();\n    // try {\n    //     const newBoard: Board = req.body;\n    //\n    //     // await conn.query('INSERT INTO board SET ?', [newBoard]);\n    //     await conn.query('CALL usp_add_board(?);', [newBoard]);\n    //\n    //     res.json({\n    //         message: 'New Post Created'\n    //     });\n    //\n    // }catch (e) {\n    //     console.log(e);\n    // }\n   \n    console.log('update');\n}\n\n\n\n//delete\nexport async function deletePost(req: Request, res: Response) {\n    // const conn = await connect();\n    // try {\n    //     const bNum = req.params.bNum;\n    //\n    //\n    //     await conn.query('DELETE FROM board WHERE bNum = ?', [bNum]);\n    //     res.json({\n    //         message: 'Post deleted'\n    //     });\n    //\n    // }catch (e) {\n    //     console.log(e);\n    // }\n    \n    console.log('update');\n}\n\n\n//update\nexport async function updatePost(req: Request, res: Response) {\n    // const conn = await connect();\n    // try {\n    //     const bNum = req.params.bNum;\n    //     const updateBoard: Board = req.body;\n    //\n    //     await conn.query('UPDATE board set ? WHERE bNum = ?', [updateBoard, bNum]);\n    //     res.json({\n    //         message: 'Post Updated'\n    //     });\n    //\n    // }catch (e) {\n    //     console.log(e);\n    // }\n    console.log('update');\n}\n\n\n\n\n\n\n"]}