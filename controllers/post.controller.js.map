{"version":3,"file":"post.controller.js","sourceRoot":"","sources":["post.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from 'express'\n// DB\nimport { connect } from '../database/database'\n// Interfaces\nimport { Board } from '../interface/Board'\n\n\n\n//get\nexport async function getPosts(req: Request, res: Response): Promise<Response | void> {\n    const conn = await connect();\n \n    \n\n    try {\n         const sql = 'CALL usp_get_board;';\n        // const sql =  `SELECT @RNUM := @RNUM + 1 AS NO, a.* FROM (SELECT * FROM board  ORDER BY bNum ASC ) a, ( SELECT @RNUM := 0 ) b`;\n        \n        const Board = await conn.query(sql);\n        \n        // console.log(Board[0]);\n        \n        \n        return res.json(Board[0]);\n        \n       \n    }catch (e) {\n        console.log(e);\n       \n    }finally {\n        await conn.release;\n    }\n}\n\n//get\nexport async function getPost(req: Request, res: Response) {\n    \n    const conn = await connect();\n    try {\n        const bNum = req.params.bNum;\n        // const posts = await conn.query(`call usp_get_list_board(?);`);\n        const posts = await conn.query('SELECT * FROM board WHERE bNum = ?', [bNum]);\n        if(posts.length > 0 ){\n            res.json(posts[0]);\n        }\n    }catch (e) {\n        console.log(e);\n    }finally {\n        await conn.release;\n    }\n   \n}\n\n//       `SELECT A.*, @RNUM := @RNUM + 1 ROWNUM FROM board A, (SELECT @RNUM := 0) R ORDER BY A.bNum`\n\n//  1.   @rownum := @rownum+1 AS RNUM 은 행을 불러올때마다 1을 더해서 출력하겠다 이다.\n//  2.   SELECT @rownum :=0) AS R 는 @rownum을 0으로 초기화해 SELECT 하겠다 이다.\n\n\n\n//post\nexport async function createPost(req: Request, res: Response) {\n    const conn = await connect();\n    try {\n        const newBoard: Board = req.body;\n    \n        // await conn.query('INSERT INTO board SET ?', [newBoard]);\n        await conn.query('CALL usp_add_board(?);', [newBoard]);\n    \n        res.json({\n            message: 'New Post Created'\n        });\n       \n    }catch (e) {\n        console.log(e);\n    }finally {\n        await conn.release;\n    }\n    \n    \n    \n    \n\n}\n\n\n\n//delete\nexport async function deletePost(req: Request, res: Response) {\n    const conn = await connect();\n    try {\n        const bNum = req.params.bNum;\n    \n    \n        await conn.query('DELETE FROM board WHERE bNum = ?', [bNum]);\n        res.json({\n            message: 'Post deleted'\n        });\n       \n    }catch (e) {\n        console.log(e);\n    }finally {\n        await conn.release;\n    }\n   \n\n}\n\n\n//update\nexport async function updatePost(req: Request, res: Response) {\n    const conn = await connect();\n    try {\n        const bNum = req.params.bNum;\n        const updateBoard: Board = req.body;\n    \n        await conn.query('UPDATE board set ? WHERE bNum = ?', [updateBoard, bNum]);\n        res.json({\n            message: 'Post Updated'\n        });\n        \n    }catch (e) {\n        console.log(e);\n    }finally {\n        await conn.release;\n    }\n}\n\n\n\n\n\n"]}