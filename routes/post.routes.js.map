{"version":3,"file":"post.routes.js","sourceRoot":"","sources":["post.routes.ts"],"names":[],"mappings":"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","sourcesContent":["import { Router } from 'express'\nimport {Board} from \"../interface/Board\";\n\nconst _connection = require('../controllers/post.controller');\nlet connection = new _connection();\nimport cors from \"cors\";\n\n\n\nconst router = Router();\n// const options:cors.CorsOptions = {\n//     allowedHeaders: [\"Origin\", \"X-Requested-With\", \"Content-Type\", \"Accept\", \"X-Access-Token\"],\n//     credentials: true,\n//     methods: \"GET,HEAD,OPTIONS,PUT,PATCH,POST,DELETE\",\n//     origin: 'http://localhost:4200/',\n//     preflightContinue: false\n// };\n//\n// router.use(cors(options));\n//\n// router.options(\"*\", cors(options));\n\n\n\nrouter.route('/')\n\n    .get((req, res) => {\n        connection.createConnection().then(result => {\n             connection.query(result, 'call usp_get_board;').then(getDatas => {\n            return getDatas;\n        }).then(getDatas => {\n            \n            console.log('getData 파라미터 값은?',getDatas);\n            result.release();\n            res.json(getDatas[0]);\n       \n            \n            \n        })\n    });\n    })\n    .post((req, res) => {\n\n        connection.createConnection().then(result => {\n            const bTitle = req.body.bTitle;\n            const bContent = req.body.bContent;\n            const bId = req.body.bId;\n            \n            console.log('bTitle, bContent, bId: 값은?? ',bTitle,bContent, bId );\n            \n            \n            // const newBoard: Board = req.body;\n        connection.query2(result, 'CALL usp_post_board(?,?,?)',[bTitle,bContent,bId]).then(postData => {\n            return postData;\n        }).then(postData => {\n            console.log(postData);\n            result.release();\n        })\n    });\n    });\n\n\n\nrouter.route('/:bNum')\n    .get((req, res) => {\n        const bNum = req.params.bNum;\n        connection.createConnection().then(result => {\n        \n        connection.query2(result,`call usp_get_list_board(?)`, [bNum] ).then(getData => {\n            console.log('getData? :',getData);\n            return getData;\n        }).then(getData => {\n            console.log('getData 의 값은 머니',getData);\n            result.release();\n            res.json(getData[0]);\n        })\n    });\n    })\n    .delete((req, res) => {\n        connection.createConnection().then(result => {\n        const bNum = req.params.bNum;\n        connection.query2(result, 'call usp_delete_board(?)', [bNum]).then(deleteData => {\n            return deleteData;\n        }).then(deleteData => {\n            console.log(deleteData);\n            result.release();\n        })\n    });\n    })\n    .put((req, res) => {\n        connection.createConnection().then(result => {\n        \n        const bNum = req.params.bNum;\n        const bTitle = req.body.bTitle;\n        const bContent = req.body.bContent;\n        const bId = req.body.bId;\n        \n        const updateBoard: Board = req.body;\n        connection.query2(result, 'call usp_update_board(?,?,?,?)', [bNum, bTitle, bContent, bId]).then(putData => {\n            return putData;\n        }).then(putData => {\n            console.log(putData);\n            result.release();\n        })\n    });\n    });\n\n\nexport default router;\n\n\n\n"]}