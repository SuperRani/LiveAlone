{"version":3,"file":"app.js","sourceRoot":"","sources":["app.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,sDAA+C;AAC/C,oDAA4B;AAE5B,MAAM,WAAW,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC;AAC7D,IAAI,UAAU,GAAG,IAAI,WAAW,EAAE,CAAC;AAEnC,SAAS;AACT,yEAA+C;AAC/C,uEAA6C;AAG7C,IAAI,GAAG,GAAG,iBAAO,EAAE,CAAC;AAIpB;IAGI,YACW,IAAsB;QAAtB,SAAI,GAAJ,IAAI,CAAkB;QAE7B,IAAI,CAAC,GAAG,GAAG,iBAAO,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAEO,QAAQ;QACZ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;IAChE,CAAC;IAEO,UAAU;QACd,mBAAmB;QAEnB,gDAAgD;QAChD,yDAAyD;QACzD,iEAAiE;QACjE,kFAAkF;QAClF,mMAAmM;QACnM,gEAAgE;QAChE,EAAE;QACF,MAAM;QACN,qCAAqC;QACrC,EAAE;QACF,yDAAyD;QACzD,cAAc;QACd,EAAE;QACF,MAAM;QACN,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,gBAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAC,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAEO,MAAM;QACV,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,sBAAW,CAAC,CAAC;QAE1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,qBAAU,CAAC,CAAC;IAEvC,CAAC;IAEK,MAAM;;YAER,wDAAwD;YAExD,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACxD,CAAC;KAAA;CAEJ;AArDD,kBAqDC","sourcesContent":["import express, { Application } from 'express';\nimport morgan from 'morgan';\n\nconst _connection = require('./controllers/post.controller');\nlet connection = new _connection();\nimport {Board} from \"./interface/Board\";\n// Routes\nimport IndexRoutes from './routes/index.routes'\nimport PostRoutes from './routes/post.routes'\n\n\nlet app = express();\n\n\n\nexport class App {\n    app: Application;\n\n    constructor(\n        public port?: number | string\n    ) {\n        this.app = express();\n        this.settings();\n        this.middleware();\n        this.routes();\n    }\n\n    private settings() {\n        this.app.set('port', this.port || process.env.PORT || 5000);\n    }\n\n    private middleware() {\n        // app.use(cors());\n        \n        // app.get('/board', function (req, res, next) {\n        //     res.setHeader('Access-Control-Allow-Origin', '*');\n        //     res.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\n        //     res.setHeader(\"Access-Control-Allow-Methods\", \"GET,HEAD,OPTIONS,POST,PUT\");\n        //     res.setHeader(\"Access-Control-Allow-Headers\", \"Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers\");\n        //     res.json({msg: 'This is CORS-enabled for all origins!'});\n        //\n        // });\n        // app.use(function(req, res, next) {\n        //\n        //     res.setHeader('Access-Control-Allow-Origin', '*');\n        //     next();\n        //\n        // });\n        this.app.use(morgan('dev'));\n        this.app.use(express.json());\n        this.app.use(express.urlencoded({extended: false}));\n    }\n\n    private routes() {\n        this.app.use(IndexRoutes);\n    \n        this.app.use('/board', PostRoutes);\n        \n    }\n\n    async listen(): Promise<void> {\n       \n        // app.get('/products/:id', function (req, res, next) {}\n        \n        await this.app.listen(this.app.get('port'));\n        console.log('Server on port', this.app.get('port'));\n    }\n\n}\n\n\n\n\n\n\n"]}